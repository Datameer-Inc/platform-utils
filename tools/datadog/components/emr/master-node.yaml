- name: Install Datadog Agent on EMR Master
  hosts: localhost
  roles:
    - { role: datadog.datadog, become: yes }
  vars:
    datadog_enabled: "{{ lookup('env', 'DD_AGENT_ENABLED') | bool }}"
    datadog_agent_version: "{{ lookup('env', 'DD_AGENT_VERSION') | default('7.25.0', true) }}"
    datadog_api_key: "{{ lookup('env', 'DD_API_KEY') }}"
    datadog_config:
      # tags:
      #   - "cluster_name:{{ lookup('env', 'DD_CLUSTER_NAME') }}"
      #   - "jobflowid:{{ lookup('env', 'CLUSTER_ID') }}"
      logs_enabled: true
      process_config:
        enabled: "true"
      network_config:
        enabled: true
    # Drop-ins for /etc/datadog-agent/conf.d/<check_name>.d/conf.yaml
    # Run "make dd-check/<check-name>" for more details
    datadog_checks:
      yarn:
        init_config:
          service: yarn
        instances:
          - resourcemanager_uri: "{{ lookup('env', 'RESOURCEMANAGER_URI') }}"
            cluster_name: "{{ lookup('env', 'CLUSTER_NAME') }}"
      hdfs_namenode:
        init_config:
          service: hdfs_namenode
        instances:
          - hdfs_namenode_jmx_uri: "{{ lookup('env', 'HDFS_NAMENODE_JMX_URI') }}"
- name: Add the HADOOP_NAMENODE_OPTS for the hdfs integration
  hosts: localhost
  vars:
    hadoop_env_sh: /etc/hadoop/conf.empty/hadoop-env.sh
    export_line: export HADOOP_NAMENODE_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=50070 $HADOOP_NAMENODE_OPTS"
  tasks:
    - name: Check for current HADOOP_NAMENODE_OPTS
      become: yes
      lineinfile:
        path: "{{ hadoop_env_sh }}"
        line: "{{ export_line }}"
        state: present
      check_mode: yes
      register: present
    - name: Replace HADOOP_NAMENODE_OPTS if needed
      become: yes
      lineinfile:
        path: "{{ hadoop_env_sh }}"
        regex: '^export HADOOP_NAMENODE_OPTS=.*'
        line: "{{ export_line }}"
        state: present
      when: present.changed
    - name: Restart hadoop-hdfs-namenode if anything changed
      become: yes
      ansible.builtin.service:
        name: hadoop-hdfs-namenode
        state: restarted
      when: present.changed
